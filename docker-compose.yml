version: '3.7'

services:
  proxy:
    image: nginx:1.19.6-alpine
    container_name: parrot-jira-proxy
    ports:
      - '80:80'
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    networks:
      - parrot-frontend-network
      - parrot-api-gateway-network
    depends_on:
      - frontend
      - api-gateway

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: parrot-jira-frontend
    restart: unless-stopped
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - parrot-frontend-network
    depends_on:
      - api-gateway

  task-tracker:
    build:
      context: ./task-tracker
      dockerfile: Dockerfile
    container_name: parrot-jira-tasks
    environment:
      - NODE_ENV=production
      - PORT=${PORT}
      - REDIS_HOST=redis
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db-tasks
      - POSTGRES_DB=${POSTGRES_DB}
    restart: unless-stopped
    networks:
      - parrot-tasks-network
      - parrot-api-gateway-network
    depends_on:
      - db-tasks
      - redis

  db-tasks:
    image: postgres:13.1-alpine
    container_name: parrot-jira-api-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - parrot-jira-tasks-db:/var/lib/postgresql/data
    networks:
      - parrot-tasks-network

  redis:
    image: redis:6.0.10-alpine
    container_name: parrot-jira-redis
    command: redis-server
    volumes:
      - parrot-jira-redis-data:/var/lib/redis/data
    restart: unless-stopped
    networks:
      - parrot-tasks-network
      - parrot-api-gateway-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: parrot-jira-api-gateway
    environment:
      - NODE_ENV=production
      - PORT=${PORT_API_GATEWAY}
      - REDIS_HOST=redis
      - TASKS_HOST=task-tracker
      - POSTGRES_USER=${POSTGRES_USER_API_GATEWAY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_API_GATEWAY}
      - POSTGRES_HOST=db-api-gateway
      - POSTGRES_DB=${POSTGRES_DB_API_GATEWAY}
      - JWT_SECRET=${JWT_SECRET}
    restart: unless-stopped
    links:
      - task-tracker
    networks:
      - parrot-api-gateway-network
    depends_on:
      - db-api-gateway
      - redis
      - task-tracker

  db-api-gateway:
    image: postgres:13.1-alpine
    container_name: parrot-jira-api-gateway-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER_API_GATEWAY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_API_GATEWAY}
      - POSTGRES_DB=${POSTGRES_DB_API_GATEWAY}
    volumes:
      - parrot-jira-api-gateway-db:/var/lib/postgresql/data
    networks:
      - parrot-api-gateway-network

  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.0
    hostname: zookeeper
    container_name: parrot-jira-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - parrot-tasks-network
      - parrot-api-gateway-network

  broker:
    image: confluentinc/cp-server:6.1.0
    hostname: broker
    container_name: parrot-jira-broker
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    networks:
      - parrot-tasks-network
      - parrot-api-gateway-network

networks:
  parrot-tasks-network:
    driver: bridge
  parrot-frontend-network:
    driver: bridge
  parrot-api-gateway-network:
    driver: bridge

volumes:
  parrot-jira-redis-data:
  parrot-jira-tasks-db:
  parrot-jira-api-gateway-db:
