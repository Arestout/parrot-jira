version: '3.7'

services:
  proxy:
    volumes:
      - ./proxy/nginx-dev.conf:/etc/nginx/nginx.conf
    networks:
      - parrot-tasks-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    command: npm run start
    volumes:
      - ./frontend/src:/app/src
    ports:
      - '3000:3000'
    # stdin_open: true
    # tty: true

  task-tracker:
    build:
      context: ./task-tracker
      dockerfile: Dockerfile.dev
    command: npm run dev
    volumes:
      - ./task-tracker/src:/app/src
    environment:
      - NODE_ENV=development
    ports:
      - '3001:3001'
      - '9229:9229'
    stdin_open: true
    tty: true

  db-tasks:
    ports:
      - '5432:5432'

  redis:
    ports:
      - '6379:6379'

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile.dev
    command: npm run dev
    volumes:
      - ./api-gateway/src:/app/src
    environment:
      - NODE_ENV=development
    ports:
      - '3003:3003'
      - '9230:9229'
    stdin_open: true
    tty: true

  db-api-gateway:
    ports:
      - '5433:5432'

  accounting:
    build:
      context: ./accounting
      dockerfile: Dockerfile.dev
    command: npm run dev
    volumes:
      - ./accounting/src:/app/src
    environment:
      - NODE_ENV=development
    ports:
      - '3005:3005'
      - '9231:9229'
    stdin_open: true
    tty: true

  db-accounting:
    ports:
      - '5434:5432'

  analytics:
    build:
      context: ./analytics
      dockerfile: Dockerfile.dev
    command: npm run dev
    volumes:
      - ./analytics/src:/app/src
    environment:
      - NODE_ENV=development
    ports:
      - '3006:3006'
      - '9232:9229'
    stdin_open: true
    tty: true

  db-analytics:
    ports:
      - '5435:5432'

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: parrot-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=redis
      # - HTTP_USER=root
      # - HTTP_PASSWORD=qwerty
    ports:
      - 8082:8081
    depends_on:
      - redis
    networks:
      - parrot-api-gateway-network
